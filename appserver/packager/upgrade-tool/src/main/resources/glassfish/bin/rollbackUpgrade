#!/bin/bash
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2021 Payara Foundation and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

AS_INSTALL=`dirname "$0"`/..

case "`uname`" in
  CYGWIN*) AS_INSTALL=`cygpath --windows $AS_INSTALL`
esac

if [ -f "${AS_INSTALL}/config/upgrade-tool.properties" ]; then
    . "${AS_INSTALL}/config/upgrade-tool.properties"
else
    echo "${AS_INSTALL}/config/upgrade-tool.properties not present! This is unexpected: Exiting since this implies you haven't yet run the upgrade-server command or have cleared it"
    exit 1
fi

# Check current present
if [ ! -d "${AS_INSTALL}/modules" ]; then
    echo "No current install present! This is unexpected: Exiting since this implies you're running this script from a staged or old install"
    exit 1
fi

# Check no staged present
if [ -d "${AS_INSTALL}/modules.new" ]; then
    echo "Staged install present! This is unexpected: Exiting since this script would overwrite the staged install"
    exit 1
fi

# Check old present
if [ ! -d "${AS_INSTALL}/modules.old" ]; then
    echo "No old install present! This is unexpected: Exiting since there's nothing to roll back"
    exit 1
fi

for i in $(echo ${PAYARA_UPGRADE_DIRS} | sed "s/,/ /g")
do
    echo "Moving ${i} to new"
    if [ -d "${AS_INSTALL}/${i}" ]; then
        mkdir ${AS_INSTALL}/${i}.new
        if [ ! $? -eq 0 ]; then
            WARN=true
        fi

        mv ${AS_INSTALL}/${i}/* ${AS_INSTALL}/${i}.new/
        if [ ! $? -eq 0 ]; then
            # Check if the warning was an empty MQ directory
            if [[ ! "${i}" == *"mq"* ]]; then
                WARN=true
            else
                echo "Ignoring error moving empty MQ directory to staged location, assuming this is a leftover empty directory from a previous payara distribution"
            fi
        fi

    else
        mv ${AS_INSTALL}/${i} ${AS_INSTALL}/${i}.new
        if [ ! $? -eq 0 ]; then
            # Check if the warning was a missing MQ directory
            if [[ ! "${i}" == *"mq"* ]]; then
                WARN=true
            else
                echo "Ignoring error moving missing MQ directory to staged location, assuming you're rolling back a payara-web distribution"
            fi
        fi
    fi

    echo "Moving old ${i} to expected location"
    if [ -d "${AS_INSTALL}/${i}.old" ]; then
        mv ${AS_INSTALL}/${i}.old/* ${AS_INSTALL}/${i}/
        if [ ! $? -eq 0 ]; then
            # Check if the warning was an empty MQ directory
            if [[ ! "${i}" == *"mq"* ]]; then
                WARN=true
            else
                echo "Ignoring error moving empty old MQ directory to expected location, assuming this is a leftover empty directory from a previous payara distribution"
            fi
        fi
    else
        mv ${AS_INSTALL}/${i}.old ${AS_INSTALL}/${i}
        if [ ! $? -eq 0 ]; then
            # Check if the warning was a missing MQ directory
            if [[ ! "${i}" == *"mq"* ]]; then
                WARN=true
            else
                echo "Ignoring error moving missing old MQ directory to expected location, assuming you're rolling back to a payara-web distribution"
            fi
        fi
    fi

    rm -rf ${AS_INSTALL}/${i}.old
done


if [ ! -z "$WARN" ]; then
    echo "A command didn't complete successfully! Check the logs and your current install. Skipping reinstallation of nodes, please run the reinstall-nodes ASadmin command if this is incorrect."
    exit 1
else
    ${AS_INSTALL}/bin/asadmin reinstall-nodes "$@"
    if [ ! $? -eq 0 ]; then
        WARN=true
    fi
fi

if [ ! -z "$WARN" ]; then
    echo "A command didn't complete successfully! Check the logs and your current install, please use the restore-domain ASadmin command to restore your desired domains if everything appears fine."
    exit 1
else
    echo "Please use the restore-domain ASadmin command to restore your desired domains."
fi

