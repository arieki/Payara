<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fish.payara.extras</groupId>
        <artifactId>extras</artifactId>
        <version>4.1.2.191.32</version>
    </parent>
    <artifactId>docker-images</artifactId>
    <packaging>pom</packaging>
    <name>Payara Docker Images</name>

    <modules>
        <module>basic</module>
        <module>server-full</module>
        <module>server-web</module>
        <module>micro</module>
        <module>tests</module>
    </modules>

    <properties>
        <payara.version>${project.version}</payara.version>
        <docker.noCache>true</docker.noCache>

        <docker.java.repository>azul/zulu-openjdk</docker.java.repository>
        <docker.jdk8.tag>8u262</docker.jdk8.tag>

        <docker.payara.domainName>payaradomain</docker.payara.domainName>
        <docker.payara.rootDirectoryName>payara41</docker.payara.rootDirectoryName>

        <docker.payara.repository>payara/${project.artifactId}</docker.payara.repository>
        <docker.payara.tag>${payara.version}</docker.payara.tag>
        <docker.payara.image>${docker.payara.repository}:${docker.payara.tag}</docker.payara.image>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.33.0</version>
                    <extensions>true</extensions>
                    <configuration>
                        <verbose>true</verbose>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


    <profiles>
        <profile>
            <id>generate-docker-images-only-if-dockerfile-exists</id>
            <activation>
                <file>
                    <exists>src/main/docker/Dockerfile</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <!-- Required until https://github.com/fabric8io/docker-maven-plugin/issues/859 is resolved -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>filter-dockerfiles</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <copy file="src/main/docker/Dockerfile" toFile="target/antrun/Dockerfile.jdk8">
                                            <filterset>
                                                <filter token="docker.java.image" value="${docker.java.repository}:${docker.jdk8.tag}"/>
                                            </filterset>
                                        </copy>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-docker-image</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <images>
                                <image>
                                    <name>${docker.payara.repository}</name>
                                    <build>
                                        <!-- On Windows with default setting ${*}, $PATH would get filtered as well -->
                                        <filter>@</filter>
                                        <tags>
                                            <tag>${docker.payara.tag}</tag>
                                        </tags>
                                        <cleanup>none</cleanup>
                                        <noCache>${docker.noCache}</noCache>
                                        <dockerFile>${project.build.directory}/antrun/Dockerfile.jdk8</dockerFile>
                                        <assembly>
                                            <mode>tar</mode>
                                            <descriptor>assembly.xml</descriptor>
                                            <tarLongFileMode>gnu</tarLongFileMode>
                                        </assembly>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
